import Link from "next/link";
import React, { useState } from "react";

const Disclaimer = () => {
  const [policyArray, setpolicyArray] = useState([
    {
      title: "Experimental Nature of the Service",
      desc: `By using this website, you acknowledge that you are participating in an experiment. The legal advice provided here is generated by artificial intelligence, which is fed information from our primary website, 24justice.pk. As AI can produce unexpected or incorrect results, known as "hallucinations," the advice offered should be taken as an experimental answer, and your use of our site does not constitute a client-attorney relationship.`,
    },
    {
      title: "No Liability",
      desc: `24Justice, its associates, and any entities involved in the creation or maintenance of this AI service, shall not be held liable for any inaccuracies, errors, or reliance on the information provided here. Your use of this service is at your own risk. This platform is not a substitute for professional legal advice. For specific legal issues, consult directly with our legal professionals at 24Justice.`,
    },
    {
      title: "User Responsibility and Feedback Obligation",
      desc: `As a user, you are fully responsible for any actions taken based on the advice received from this website. You are obliged to provide feedback on the advice received by filling out the "Talk to Our Consultant" form on our website. Failure to provide feedback may, at our sole discretion, result in liability on your part.`,
    },
    {
      title: "Data Use and Privacy",

      desc: [
        [
          `We use Google Analytics and Search Console for data analysis and future improvements. Please review our `,
        ],
        [
          <Link href="/PrivacyPolicy" className="text-blue-500 underline">
            Privacy and policy page
          </Link>,
        ],
        [` for detailed information on how we handle your data.`],
      ],
    },
    {
      title: "Jurisdiction",
      desc: `This service operates under the jurisdiction of Pakistan. Any disputes or legal issues arising from the use of this service will be governed by Pakistani law.`,
    },
    {
      title: "Amendments and Updates",
      desc: `We reserve the right to amend or update this disclaimer at any time. Continued use of the service after such changes constitutes your consent to the updated terms.`,
    },
    {
      title: "Agreement",
      desc: `By using our website you acknowledge that you have read, understood, and agreed to the terms outlined in this disclaimer.`,
      originaldesc: `By clicking "Agree and Continue," you acknowledge that you have read, understood, and agreed to the terms outlined in this disclaimer.`,
    },
  ]);
  return (
    <div>
      <div className="md:p-[1.5rem] p-[0.5rem] pt-[5rem] md:pt-[5rem]  overflow-y-scroll h-[100vh]">
        <h3
          className="md:text-4xl text-2xl text-bold text-[#DBBE67]"
          style={{ fontFamily: "rubik" }}
        >
          Legal Advice Disclaimer
        </h3>
        <div className="mt-[0.2rem] pb-[5rem]">
          <div className="overflow-y-auto md:text-base text-xs">
            <h3
              className="whitespace-break-spaces text-slate-200"
              style={{ fontFamily: "Josefin Sans" }}
            >
              {`Welcome to 24justice.com, an experimental AI-driven platform designed to offer general legal advice. This service is provided by 24Justice.`}
            </h3>
            {policyArray.map((el) => (
              <div
                key={el.title + (el.desc || "")}
                className="flex flex-col gap-[0.3rem] mt-[2rem]"
              >
                <h3
                  className="md:text-xl text-base text-semibold"
                  style={{ fontFamily: "rubik" }}
                >
                  {el.title}
                </h3>
                <div
                  className="whitespace-break-spaces text-slate-200"
                  style={{ fontFamily: "Lato" }}
                >
                  {el.desc}
                  {
                    //   typeof el.desc == "string"
                    //     ? el.desc
                    //     : () => {
                    //         const content = el.desc.reduce((combined, elem) => {
                    //           return content + elem;
                    //         });
                    //         return "asd";
                    //       }
                  }
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Disclaimer;
